//
//  DetailViewController.swift
//  ExsampleAppCoordinator
//
//  Created by Komsit on 20/11/2567 BE.
//  Copyright (c) 2567 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailDisplayLogic: AnyObject {
    func displayParam(viewModel: Detail.GetParam.ViewModel)
}

final class DetailViewController: UIViewController, DetailDisplayLogic, Storyboarded {
	var interactor: DetailBusinessLogic?
	var router: (NSObjectProtocol & DetailRoutingLogic & DetailDataPassing & DetailCoordinator)?

    @IBOutlet private weak var closeButton: UIButton!
    @IBOutlet private weak var textLabel: UILabel!
    
	override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
		super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
		setup()
	}
	
	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		setup()
	}
	
	private func setup() {
		let viewController = self
		let interactor = DetailInteractor()
		let presenter = DetailPresenter()
		let router = DetailRouter()
		viewController.interactor = interactor
		viewController.router = router
		interactor.presenter = presenter
		presenter.viewController = viewController
		router.viewController = viewController
		router.dataStore = interactor
	}
	
	override func viewDidLoad() {
		super.viewDidLoad()
        title = "Detail"
        navigationController?.navigationBar.isHidden = false
        closeButton.isHidden = !isModal()
        interactor?.initial()
	}
	
	// MARK: DetailDisplayLogic
    func displayParam(viewModel: Detail.GetParam.ViewModel) {
        textLabel.text = viewModel.param
    }
    
    @IBAction private func closeAction(_ sender: UIButton) {
        router?.routeFinish()
    }
    
    func isModal() -> Bool {
        return self.presentingViewController?.presentedViewController == self
            || (self.navigationController != nil && self.navigationController?.presentingViewController?.presentedViewController == self.navigationController)
            || self.tabBarController?.presentingViewController is UITabBarController
    }
}
